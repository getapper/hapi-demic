// HAPIimport hapiInert from '@hapi/inert';import hacli from '@antoniogiordano/hacli';import hapiLogger from 'root/plugins/logger';import hapiModels from 'root/plugins/models';import hapiMongoDB from 'hapi-mongodb';import hapiMySQL from 'root/plugins/mysql';import hapiResponseHandler from 'root/plugins/response-handler';import hapiAuthManager from 'root/plugins/auth-manager';import hapiSwagger from 'hapi-swagger';import hapiVision from '@hapi/vision';import hapiAuthJwt2 from 'hapi-auth-jwt2';export default (opts) => {  const {    acl,    auth,    loggerDb,    useMongo,    mongo,    useMysql,    mysql,    useSwagger,    swagger,  } = opts;  let plugins = [];  // MONGO DB  if (useMongo){    plugins.push({      plugin: hapiMongoDB,      options: mongo    });  }  // MYSQL  if (useMysql) {    plugins.push({      plugin: hapiMySQL,      options: mysql    });  }  plugins = plugins.concat([    {      plugin: hapiModels,      options: {        useMongo,        useMysql,        loggerDb      }    },    {      plugin: hapiLogger,      options: {        loggerDb      }    },    {      plugin: hapiInert    }  ]);  if (auth.enabled) {    plugins = plugins.concat([      // AUTH MANAGER      {        plugin: hapiAuthManager,        options: {          authDb: auth.authDb,          jwtSecret: auth.jwtSecret,          expiresIn: auth.expiresIn        }      },      // AUTH_JWT2      {        plugin: hapiAuthJwt2      }    ]);  }  if (acl.enabled) {    // ACL    plugins.push({      plugin: hacli,      options: acl.options    });  }  // VISION  plugins.push({    plugin: hapiVision  });  if (useSwagger) {    // SWAGGER    plugins.push({      plugin: hapiSwagger,      options: swagger    });  }  // RESPONSE HANDLER  plugins.push({    plugin: hapiResponseHandler,    options: {      cookieOptions: auth.cookieOptions    }  });  return plugins;};